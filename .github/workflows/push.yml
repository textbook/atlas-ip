---
name: Build and publish the action

on:
  push:
    branches: [ main ]
    tags: [ npm-v* ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: npm ci
      - run: npm run build
      - run: npm run lint
      - run: npm --workspace packages/e2e run e2e
        env:
          ATLAS_GROUP_ID: ${{ secrets.ATLAS_GROUP_ID }}
          ATLAS_PRIVATE_KEY: ${{ secrets.ATLAS_PRIVATE_KEY }}
          ATLAS_PUBLIC_KEY: ${{ secrets.ATLAS_PUBLIC_KEY }}
          MONGO_URL: ${{ secrets.MONGO_URL }}
      - run: npm --workspace packages/atlas-ip pack
      - uses: actions/upload-artifact@v4
        with:
          if-no-files-found: error
          name: package
          path:
            textbook-*.tgz
      - run: cp -r .github packages/action/
      - uses: actions/upload-artifact@v4
        with:
          if-no-files-found: error
          name: action
          path: |
            packages/action/.github/**
            packages/action/main/**
            packages/action/post/**
            packages/action/action.yml
            packages/action/LICENSE
            packages/action/package.json
            packages/action/README.md
  deploy-github:
    needs: [ test ]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: v1
      - run: rm -rf *
      - uses: actions/download-artifact@v4
        with:
          name: action
      - run: |
          git add .
          if [[ -z "$(git status --porcelain)" ]]; then
            echo 'No changes to commit'
            exit 0
          fi
          git config --global user.name 'gh-actions'
          git config --global user.email 'actions@github.com'
          git commit --message 'Update atlas-ip action'
          git push
  deploy-npm:
    needs: [ test ]
    if: startsWith(github.ref, 'refs/tags/npm-v')
    runs-on: ubuntu-22.04
    environment: npm
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - uses: actions/download-artifact@v4
        with:
          name: package
      - run: npm config set '//registry.npmjs.org/:_authToken' '${NPM_AUTH_TOKEN}'
      - run: npm publish --provenance textbook-atlas-ip-*.tgz
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
  smoke-github:
    needs: [ deploy-github ]
    uses: ./.github/workflows/test.yml
    secrets: inherit
  smoke-npm:
    needs: [ deploy-npm ]
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: npm --include-workspace-root --workspace packages/e2e ci
      - run: npm --workspace packages/e2e install --no-save @textbook/atlas-ip
      - run: npm --workspace packages/e2e run e2e
